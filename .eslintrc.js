module.exports = {
	plugins: ['style', 'no-only-tests'],
	env: {
		es2020: true,
	},
	rules: {
		// possible errors
		'for-direction': 'error',
		'getter-return': 'error',
		'no-async-promise-executor': 'error',
		'no-compare-neg-zero': 'error',
		'no-cond-assign': ['error', 'always'],
		'no-console': ['error', { allow: ['error', 'warn'] }],
		'no-constant-condition': 'error',
		'no-control-regex': 'error',
		'no-debugger': 'error',
		'no-dupe-args': 'error',
		'no-dupe-else-if': 'error',
		'no-dupe-keys': 'error',
		'no-duplicate-case': 'error',
		'no-empty': ['error', { allowEmptyCatch: true }],
		'no-empty-character-class': 'error',
		'no-ex-assign': 'error',
		'no-extra-boolean-cast': ['error', { enforceForLogicalOperands: true }],
		'no-extra-parens': [
			'error',
			'all',
			{
				returnAssign: false,
				nestedBinaryExpressions: false,
			},
		],
		'no-extra-semi': 'error',
		'no-func-assign': 'error',
		'no-import-assign': 'error',
		'no-inner-declarations': ['error', 'both'],
		'no-invalid-regexp': 'error',
		'no-irregular-whitespace': 'error',
		'no-loss-of-precision': 'error',
		'no-misleading-character-class': 'error',
		'no-obj-calls': 'error',
		'no-promise-executor-return': 'error',
		'no-prototype-builtins': 'error',
		'no-regex-spaces': 'error',
		'no-setter-return': 'error',
		'no-sparse-arrays': 'error',
		'no-template-curly-in-string': 'error',
		'no-unexpected-multiline': 'error',
		'no-unreachable': 'error',
		'no-unreachable-loop': 'error',
		'no-unsafe-finally': 'error',
		'no-unsafe-negation': 'error',
		'no-useless-backreference': 'error',
		'require-atomic-updates': 'error',
		'use-isnan': ['error', { enforceForIndexOf: true }],
		'valid-typeof': 'error',
		// best practices
		'accessor-pairs': 0,
		'array-callback-return': 'error',
		'block-scoped-var': 0,
		'class-methods-use-this': 0,
		'complexity': ['warn', 20],
		'consistent-return': 0,
		'curly': ['error', 'all'],
		'default-case': 0,
		'default-case-last': 'error',
		'default-param-last': 'error',
		'dot-location': ['error', 'property'],
		'dot-notation': 0,
		'eqeqeq': ['error', 'always'],
		'grouped-accessor-pairs': ['error', 'getBeforeSet'],
		'guard-for-in': 'error',
		'max-classes-per-file': ['error', 2],
		'no-alert': 'error',
		'no-caller': 'error',
		'no-case-declarations': 'error',
		'no-constructor-return': 0,
		'no-div-regex': 0,
		'no-else-return': ['error', { allowElseIf: false }],
		'no-empty-function': ['error', { allow: ['arrowFunctions'] }],
		'no-empty-pattern': 'error',
		'no-eval': 'error',
		'no-extend-native': 'error',
		'no-extra-bind': 'error',
		'no-extra-label': 0,
		'no-fallthrough': 0,
		'no-floating-decimal': 'error',
		'no-global-assign': 'error',
		'no-implicit-coercion': 'error',
		'no-implicit-globals': 'error',
		'no-implied-eval': 'error',
		'no-invalid-this': ['error', { capIsConstructor: false }],
		'no-iterator': 'error',
		'no-labels': 'error',
		'no-lone-blocks': 'error',
		'no-loop-func': 0,
		'no-magic-numbers': 0,
		'no-multi-spaces': ['error', { exceptions: { Property: false } }],
		'no-multi-str': 'error',
		'no-new': 'error',
		'no-new-func': 'error',
		'no-new-wrappers': 'error',
		'no-nonoctal-decimal-escape': 'error',
		'no-octal': 'error',
		'no-octal-escape': 'error',
		'no-param-reassign': 0,
		'no-proto': 'error',
		'no-redeclare': ['error'],
		'no-restricted-properties': 0,
		'no-return-assign': 'error',
		'no-return-await': 'error',
		'no-script-url': 'error',
		'no-self-assign': 'error',
		'no-self-compare': 'error',
		'no-sequences': 'error',
		'no-throw-literal': 'error',
		'no-unmodified-loop-condition': 'error',
		'no-unused-expressions': 'error',
		'no-unused-labels': 0,
		'no-useless-call': 'error',
		'no-useless-catch': 'error',
		'no-useless-concat': 'error',
		'no-useless-escape': 'error',
		'no-useless-return': 'error',
		'no-void': 'error',
		'no-warning-comments': ['error', { location: 'anywhere' }],
		'no-with': 'error',
		'prefer-named-capture-group': 0,
		'prefer-promise-reject-errors': 'error',
		'prefer-regex-literals': ['error', { disallowRedundantWrapping: true }],
		'radix': 0,
		'require-await': 'error',
		'require-unicode-regexp': 'error',
		'vars-on-top': 0,
		'wrap-iife': 'error',
		'yoda': 'error',
		// variables
		'init-declarations': 0,
		'no-delete-var': 'error',
		'no-label-var': 0,
		'no-restricted-globals': 0,
		'no-shadow': ['error', { builtinGlobals: true }],
		'no-shadow-restricted-names': 'error',
		'no-undef': 'error',
		'no-undef-init': 'error',
		'no-undefined': 0,
		'no-unused-vars': ['error', { ignoreRestSiblings: true }],
		'no-use-before-define': 0,
		// stylistic issues
		'array-bracket-newline': ['error', { multiline: true }],
		'array-bracket-spacing': ['error', 'never'],
		'array-element-newline': ['error', { multiline: true, minItems: 10 }],
		'block-spacing': ['error', 'always'],
		'brace-style': ['error', '1tbs'],
		'camelcase': ['error', { allow: ['^GM_'] }],
		'comma-dangle': ['error', 'always-multiline'],
		'comma-spacing': 'error',
		'comma-style': ['error', 'last'],
		'computed-property-spacing': ['error', 'never'],
		'eol-last': ['error', 'always'],
		'func-call-spacing': ['error', 'never'],
		'func-name-matching': 0,
		'func-names': 0,
		'func-style': 0,
		'function-call-argument-newline': ['error', 'consistent'],
		'function-paren-newline': ['error', 'multiline'],
		'implicit-arrow-linebreak': 'error',
		'indent': [
			'error',
			'tab',
			{
				SwitchCase: 1,
				MemberExpression: 1,
				FunctionDeclaration: { body: 1, parameters: 1 },
				FunctionExpression: { body: 1, parameters: 1 },
				CallExpression: { arguments: 1 },
				ArrayExpression: 1,
				ObjectExpression: 1,
				ImportDeclaration: 1,
				flatTernaryExpressions: true,
				offsetTernaryExpressions: false,
				ignoreComments: false,
			},
		],
		'key-spacing': ['error', { beforeColon: false, afterColon: true, mode: 'strict' }],
		'keyword-spacing': ['error', { before: true, after: true }],
		'ine-comment-position': 0,
		'linebreak-style': 'error',
		'lines-around-comment': 0,
		'lines-between-class-members': ['error', 'always', { exceptAfterSingleLine: true }],
		'max-depth': ['error', 4],
		'max-len': 0,
		'max-lines': 0,
		'max-lines-per-function': 0,
		'max-nested-callbacks': 0,
		'max-params': 0,
		'max-statements': 0,
		'max-statements-per-line': ['error', { max: 1 }],
		'multiline-comment-style': 0,
		'multiline-ternary': 0,
		'new-cap': 0,
		'new-parens': ['error', 'always'],
		'newline-per-chained-call': ['error'],
		'no-array-constructor': 'error',
		'no-bitwise': 0,
		'no-continue': 0,
		'no-inline-comments': 0,
		'no-lonely-if': 'error',
		'no-mixed-operators': 'error',
		'no-mixed-spaces-and-tabs': 'error',
		'no-multi-assign': 'error',
		'no-negated-condition': 'error',
		'no-nested-ternary': 0,
		'no-new-object': 'error',
		'no-plusplus': 0,
		'no-tabs': 0,
		'no-ternary': 0,
		'no-trailing-spaces': ['error'],
		'no-underscore-dangle': ['error', { allow: ['_'], enforceInMethodNames: true }],
		'no-unneeded-ternary': 'error',
		'no-whitespace-before-property': 'error',
		'nonblock-statement-body-position': 0,
		'object-curly-newline': ['error', { consistent: true, multiline: true }],
		'object-curly-spacing': ['error', 'always'],
		'object-property-newline': ['error', { allowAllPropertiesOnSameLine: true }],
		'one-var': ['error', 'never'],
		'one-var-declaration-per-line': 0,
		'operator-assignment': ['error', 'always'],
		'operator-linebreak': ['error', 'after'],
		'padded-blocks': ['error', 'never', { allowSingleLineBlocks: false }],
		'padding-line-between-statements': 0,
		'prefer-exponentiation-operator': 'error',
		'prefer-object-spread': 'error',
		'quote-props': ['error', 'consistent'],
		'quotes': ['error', 'single', { avoidEscape: true, allowTemplateLiterals: true }],
		'semi': ['error', 'always'],
		'semi-spacing': 'error',
		'semi-style': ['error', 'last'],
		'sort-keys': 0,
		'sort-vars': 0,
		'space-before-blocks': ['error', 'always'],
		'space-before-function-paren': [
			'error',
			{
				anonymous: 'always',
				named: 'never',
				asyncArrow: 'always',
			},
		],
		'space-in-parens': ['error', 'never'],
		'space-infix-ops': ['error'],
		'space-unary-ops': ['error', { words: true, nonwords: false }],
		'spaced-comment': ['error', 'always', { exceptions: ['*'] }],
		'switch-colon-spacing': ['error'],
		'template-tag-spacing': ['error', 'never'],
		'unicode-bom': 'error',
		'wrap-regex': 0,
		// es6
		'arrow-body-style': ['error', 'as-needed', { requireReturnForObjectLiteral: true }],
		'arrow-parens': ['error', 'always'],
		'arrow-spacing': ['error'],
		'constructor-super': 'error',
		'generator-star-spacing': ['error', { before: false, after: true }],
		'no-class-assign': 'error',
		'no-confusing-arrow': 0,
		'no-const-assign': 'error',
		'no-dupe-class-members': 'error',
		'no-duplicate-imports': ['error'],
		'no-new-symbol': 'error',
		'no-restricted-exports': 0,
		'no-restricted-imports': 0,
		'no-this-before-super': 'error',
		'no-useless-computed-key': 'error',
		'no-useless-constructor': 'error',
		'no-useless-rename': 'error',
		'no-var': 'error',
		'object-shorthand': 'error',
		'prefer-arrow-callback': 'error',
		'prefer-const': 'error',
		'prefer-destructuring': ['error', { array: true, object: true }],
		'prefer-numeric-literals': 'error',
		'prefer-rest-params': 'error',
		'prefer-spread': 'error',
		'prefer-template': 'error',
		'require-yield': 'error',
		'rest-spread-spacing': ['error', 'never'],
		'sort-imports': 0,
		'symbol-description': 'error',
		'template-curly-spacing': ['error', 'never'],
		'yield-star-spacing': ['error', { before: false, after: true }],
		// plugins
		'style/group-imports': ['error'],
		'style/sort-imports': ['error', { caseGroups: true, typesInGroup: 'top' }],
		'style/experimental/no-commented-code': ['warn', { ignorePatterns: ['^https?://'], extendDefaultIgnorePatterns: true }],
		'no-only-tests/no-only-tests': ['error'],
	},
	overrides: [
		{
			files: ['.*rc.js', '*.config.js'],
			env: {
				node: true,
			},
		},
		{
			files: '*.ts',
			parser: '@typescript-eslint/parser',
			parserOptions: {
				sourceType: 'module',
				project: ['./tsconfig.json'],
			},
			plugins: ['@typescript-eslint'],
			rules: {
				'@typescript-eslint/adjacent-overload-signatures': 'error',
				'@typescript-eslint/array-type': ['error', { default: 'array-simple' }],
				'@typescript-eslint/ban-ts-comment': [
					2,
					{
						'ts-ignore': 'allow-with-description',
						'ts-nocheck': 'allow-with-description',
					},
				],
				'@typescript-eslint/ban-types': [
					2,
					{
						types: { 'BigInt': { fixWith: 'bigint' } },
						extendDefaults: true,
					},
				],
				'@typescript-eslint/class-literal-property-style': ['error', 'fields'],
				'@typescript-eslint/consistent-indexed-object-style': ['error', 'record'],
				'@typescript-eslint/consistent-type-assertions': [
					2,
					{
						assertionStyle: 'as',
						objectLiteralTypeAssertions: 'allow-as-parameter',
					},
				],
				'@typescript-eslint/consistent-type-definitions': ['error', 'interface'],
				'@typescript-eslint/consistent-type-imports': ['error', { prefer: 'type-imports' }],
				'@typescript-eslint/explicit-function-return-type': 0,
				'@typescript-eslint/explicit-member-accessibility': ['error', { accessibility: 'no-public' }],
				'@typescript-eslint/explicit-module-boundary-types': ['error'],
				'@typescript-eslint/member-delimiter-style': ['error'],
				'@typescript-eslint/member-ordering': [
					2,
					{
						default: [
							'private-static-field',
							'protected-static-field',
							'public-static-field',
							'private-static-method',
							'protected-static-method',
							'public-static-method',
							'signature',
							'protected-abstract-field',
							'public-abstract-field',
							'private-decorated-field',
							'private-instance-field',
							'protected-decorated-field',
							'protected-instance-field',
							'public-decorated-field',
							'public-instance-field',
							'field',
							'private-constructor',
							'protected-constructor',
							'public-constructor',
							'constructor',
							'protected-abstract-method',
							'public-abstract-method',
							'protected-decorated-method',
							'protected-instance-method',
							'private-decorated-method',
							'private-instance-method',
							'public-decorated-method',
							'public-instance-method',
							'method',
						],
					},
				],
				'@typescript-eslint/method-signature-style': ['error', 'property'],
				'@typescript-eslint/naming-convention': [
					2,
					{
						selector: 'default',
						format: ['strictCamelCase'],
						leadingUnderscore: 'forbid',
						trailingUnderscore: 'forbid',
					},
					{
						selector: ['typeLike', 'enumMember'],
						format: ['StrictPascalCase'],
					},
					{
						selector: 'parameter',
						format: ['strictCamelCase'],
						leadingUnderscore: 'allow',
					},
				],
				'@typescript-eslint/no-confusing-non-null-assertion': 0,
				'@typescript-eslint/no-confusing-void-expression': ['error', { ignoreArrowShorthand: true }],
				'@typescript-eslint/no-dynamic-delete': 'error',
				'@typescript-eslint/no-empty-interface': ['error'],
				'@typescript-eslint/no-explicit-any': ['error'],
				'@typescript-eslint/no-extra-non-null-assertion': 0,
				'@typescript-eslint/no-extraneous-class': ['error', { allowWithDecorator: true }],
				'@typescript-eslint/no-implicit-any-catch': ['error'],
				'@typescript-eslint/no-inferrable-types': ['error'],
				'@typescript-eslint/no-invalid-void-type': ['error'],
				'@typescript-eslint/no-misused-new': 'error',
				'@typescript-eslint/no-namespace': ['error'],
				'@typescript-eslint/no-non-null-asserted-optional-chain': 0,
				'@typescript-eslint/no-non-null-assertion': 'error',
				'@typescript-eslint/no-parameter-properties': 0,
				'@typescript-eslint/no-require-imports': 'error',
				'@typescript-eslint/no-this-alias': ['error'],
				'@typescript-eslint/no-type-alias': 0,
				'@typescript-eslint/no-var-requires': 0,
				'@typescript-eslint/prefer-as-const': 'error',
				'@typescript-eslint/prefer-enum-initializers': 'error',
				'@typescript-eslint/prefer-for-of': 'error',
				'@typescript-eslint/prefer-function-type': 'error',
				'@typescript-eslint/prefer-namespace-keyword': 0,
				'@typescript-eslint/prefer-optional-chain': 'error',
				'@typescript-eslint/prefer-ts-expect-error': 'error',
				'@typescript-eslint/triple-slash-reference': 'error',
				'@typescript-eslint/type-annotation-spacing': ['error'],
				'@typescript-eslint/typedef': 0,
				'@typescript-eslint/unified-signatures': 0,
				// rules requiring type information
				'@typescript-eslint/await-thenable': 'error',
				'@typescript-eslint/no-base-to-string': ['error'],
				'@typescript-eslint/no-floating-promises': ['error'],
				'@typescript-eslint/no-for-in-array': 'error',
				'@typescript-eslint/no-implied-eval': 'error',
				'@typescript-eslint/no-misused-promises': ['error'],
				'@typescript-eslint/no-throw-literal': 'error',
				'@typescript-eslint/no-unnecessary-boolean-literal-compare': [
					2,
					{
						allowComparingNullableBooleansToTrue: false,
						allowComparingNullableBooleansToFalse: false,
					},
				],
				'@typescript-eslint/no-unnecessary-condition': ['error'],
				'@typescript-eslint/no-unnecessary-qualifier': 'error',
				'@typescript-eslint/no-unnecessary-type-arguments': 'error',
				'@typescript-eslint/no-unnecessary-type-assertion': ['error'],
				'@typescript-eslint/no-unsafe-assignment': 'error',
				'@typescript-eslint/no-unsafe-call': 'error',
				'@typescript-eslint/no-unsafe-member-access': 'error',
				'@typescript-eslint/no-unsafe-return': 'error',
				'@typescript-eslint/no-unused-vars-experimental': ['error', { ignoreArgsIfArgsAfterAreUsed: true }],
				'@typescript-eslint/prefer-includes': 'error',
				'@typescript-eslint/prefer-literal-enum-member': 'error',
				'@typescript-eslint/prefer-nullish-coalescing': ['error'],
				'@typescript-eslint/prefer-readonly': ['error'],
				'@typescript-eslint/prefer-readonly-parameter-types': 0,
				'@typescript-eslint/prefer-reduce-type-parameter': 'error',
				'@typescript-eslint/prefer-regexp-exec': 'error',
				'@typescript-eslint/prefer-string-starts-ends-with': 'error',
				'@typescript-eslint/promise-function-async': ['error'],
				'@typescript-eslint/require-array-sort-compare': ['error', { ignoreStringArrays: true }],
				'@typescript-eslint/restrict-plus-operands': ['error', { checkCompoundAssignments: true }],
				'@typescript-eslint/restrict-template-expressions': ['error'],
				'@typescript-eslint/strict-boolean-expressions': [
					2,
					{
						allowNullableString: true,
						allowNullableNumber: true,
						allowNullableBoolean: true,
					},
				],
				'@typescript-eslint/switch-exhaustiveness-check': 'error',
				'@typescript-eslint/unbound-method': ['error'],
				// eslint extension rules
				'brace-style': 0,
				'@typescript-eslint/brace-style': ['error', '1tbs'],
				'comma-dangle': 0,
				'@typescript-eslint/comma-dangle': ['error', 'always-multiline'],
				'comma-spacing': 0,
				'@typescript-eslint/comma-spacing': 'error',
				'default-param-last': 0,
				'@typescript-eslint/default-param-last': 'error',
				'func-call-spacing': 0,
				'@typescript-eslint/func-call-spacing': ['error', 'never'],
				'indent': 0,
				'@typescript-eslint/indent': [
					2,
					'tab',
					{
						SwitchCase: 1,
						MemberExpression: 1,
						FunctionDeclaration: { body: 1, parameters: 1 },
						FunctionExpression: { body: 1, parameters: 1 },
						CallExpression: { arguments: 1 },
						ArrayExpression: 1,
						ObjectExpression: 1,
						ImportDeclaration: 1,
						flatTernaryExpressions: true,
						offsetTernaryExpressions: false,
						ignoreComments: false,
					},
				],
				'@typescript-eslint/init-declarations': 0,
				'keyword-spacing': 0,
				'@typescript-eslint/keyword-spacing': ['error', { before: true, after: true }],
				'lines-between-class-members': 0,
				'@typescript-eslint/lines-between-class-members': [
					2,
					'always',
					{
						exceptAfterSingleLine: true,
						exceptAfterOverload: true,
					},
				],
				'no-array-constructor': 0,
				'@typescript-eslint/no-array-constructor': 'error',
				'no-dupe-class-members': 0,
				'@typescript-eslint/no-dupe-class-members': 'error',
				'no-duplicate-imports': 0,
				'@typescript-eslint/no-duplicate-imports': ['error'],
				'no-empty-function': 0,
				'@typescript-eslint/no-empty-function': ['error', { allow: ['arrowFunctions', 'decoratedFunctions'] }],
				'no-extra-parens': 0,
				'@typescript-eslint/no-extra-parens': [
					2,
					'all',
					{
						returnAssign: false,
						nestedBinaryExpressions: false,
					},
				],
				'no-extra-semi': 0,
				'@typescript-eslint/no-extra-semi': 'error',
				'no-invalid-this': 0,
				'@typescript-eslint/no-invalid-this': ['error', { capIsConstructor: false }],
				'@typescript-eslint/no-loop-func': 0,
				'no-loss-of-precision': 0,
				'@typescript-eslint/no-loss-of-precision': 'error',
				'@typescript-eslint/no-magic-numbers': 0,
				'no-redeclare': 0,
				'@typescript-eslint/no-redeclare': 'error',
				'no-shadow': 0,
				'@typescript-eslint/no-shadow': [
					2,
					{
						builtinGlobals: true,
						ignoreTypeValueShadow: false,
					},
				],
				'no-unused-expressions': 0,
				'@typescript-eslint/no-unused-expressions': 'error',
				'no-unused-vars': 0,
				'@typescript-eslint/no-unused-vars': 0,
				'@typescript-eslint/no-use-before-define': 0,
				'no-useless-constructor': 0,
				'@typescript-eslint/no-useless-constructor': 'error',
				'quotes': 0,
				'@typescript-eslint/quotes': ['error', 'single', { avoidEscape: true, allowTemplateLiterals: true }],
				'require-await': 0,
				'@typescript-eslint/require-await': 'error',
				'no-return-await': 0,
				'@typescript-eslint/return-await': 'error',
				'semi': 0,
				'@typescript-eslint/semi': ['error', 'always'],
				'space-before-function-paren': 0,
				'@typescript-eslint/space-before-function-paren': [
					2,
					{
						anonymous: 'always',
						named: 'never',
						asyncArrow: 'always',
					},
				],
				'space-infix-ops': 0,
				'@typescript-eslint/space-infix-ops': ['error'],
				//  redundant for typescript
				'camelcase': 0, // covered by @typescript-eslint/naming-convention
				'constructor-super': 0,
				'getter-return': 0,
				'no-const-assign': 0,
				'no-dupe-args': 0,
				'no-dupe-keys': 0,
				'no-func-assign': 0,
				'no-import-assign': 0,
				'no-new-symbol': 0,
				'no-obj-calls': 0,
				'no-setter-return': 0,
				'no-this-before-super': 0,
				'no-undef': 0,
				'no-unreachable': 0,
				'no-unsafe-negation': 0,
				'valid-typeof': 0,
			},
		},
		{
			files: '*.d.ts',
			rules: {
				'@typescript-eslint/method-signature-style': 0,
				'@typescript-eslint/naming-convention': 0,
			},
		},
	],
};
